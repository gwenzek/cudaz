// TODO: implement a dynamic parallel quicksort
// Need to compile "Cudaz" for the GPU ?
// 1. write a sample dynamic parallel quicksort in C
// 2. look at the .ptx generated by nvcc
// 3. update Cudaz so that it's easy to use on the GPU too
// stream launched from the device need to have the CU_STREAM_NON_BLOCKING flag
// we don't need to run device initialization on the device.

const cudaz = @import("cudaz");
const std = @import("std");
const log = std.log;

pub fn main() anyerror!void {
    log.info("***** HW1 ******", .{});

    var general_purpose_allocator = std.heap.GeneralPurposeAllocator(.{}){};
    var alloc = general_purpose_allocator.allocator();
    const args = try std.process.argsAlloc(alloc);
    defer std.process.argsFree(alloc, args);

    var stream = try cudaz.Stream.init(0);
    defer stream.deinit();
}
