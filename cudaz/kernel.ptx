//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30300941
// Cuda compilation tools, release 11.4, V11.4.120
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_52
.address_size 64

	// .globl	rgba_to_greyscale

.visible .entry rgba_to_greyscale(
	.param .u64 rgba_to_greyscale_param_0,
	.param .u64 rgba_to_greyscale_param_1,
	.param .u32 rgba_to_greyscale_param_2,
	.param .u32 rgba_to_greyscale_param_3
)
{
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [rgba_to_greyscale_param_0];
	ld.param.u64 	%rd2, [rgba_to_greyscale_param_1];
	ld.param.u32 	%r1, [rgba_to_greyscale_param_3];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ctaid.y;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	cvt.u64.u32 	%rd5, %r4;
	mul.wide.u32 	%rd6, %r4, 3;
	add.s64 	%rd7, %rd4, %rd6;
	ld.global.u8 	%rs1, [%rd7];
	ld.global.u8 	%rs2, [%rd7+1];
	ld.global.u8 	%rs3, [%rd7+2];
	cvt.rn.f32.u16 	%f1, %rs1;
	cvt.rn.f32.u16 	%f2, %rs2;
	cvt.rn.f32.u16 	%f3, %rs3;
	mul.f32 	%f4, %f2, 0f3F1645A2;
	fma.rn.f32 	%f5, %f1, 0f3E991687, %f4;
	fma.rn.f32 	%f6, %f3, 0f3DE978D5, %f5;
	cvt.rzi.u32.f32 	%r5, %f6;
	add.s64 	%rd8, %rd3, %rd5;
	st.global.u8 	[%rd8], %r5;
	ret;

}
	// .globl	increment_naive
.visible .entry increment_naive(
	.param .u64 increment_naive_param_0,
	.param .u32 increment_naive_param_1
)
{
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [increment_naive_param_0];
	ld.param.u32 	%r1, [increment_naive_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	rem.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd3, %r6, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.u32 	%r7, [%rd4];
	add.s32 	%r8, %r7, 1;
	st.global.u32 	[%rd4], %r8;
	ret;

}
	// .globl	increment_atomic
.visible .entry increment_atomic(
	.param .u64 increment_atomic_param_0,
	.param .u32 increment_atomic_param_1
)
{
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [increment_atomic_param_0];
	ld.param.u32 	%r1, [increment_atomic_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r5, %r2, %r3, %r4;
	rem.s32 	%r6, %r5, %r1;
	mul.wide.s32 	%rd3, %r6, 4;
	add.s64 	%rd4, %rd2, %rd3;
	atom.global.add.u32 	%r7, [%rd4], 1;
	ret;

}
	// .globl	gaussian_blur
.visible .entry gaussian_blur(
	.param .u64 gaussian_blur_param_0,
	.param .u64 gaussian_blur_param_1,
	.param .u32 gaussian_blur_param_2,
	.param .u32 gaussian_blur_param_3,
	.param .u64 gaussian_blur_param_4,
	.param .u32 gaussian_blur_param_5
)
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<34>;
	.reg .b32 	%r<79>;
	.reg .b64 	%rd<32>;


	ld.param.u64 	%rd10, [gaussian_blur_param_0];
	ld.param.u64 	%rd9, [gaussian_blur_param_1];
	ld.param.u32 	%r29, [gaussian_blur_param_2];
	ld.param.u32 	%r30, [gaussian_blur_param_3];
	ld.param.u64 	%rd11, [gaussian_blur_param_4];
	ld.param.u32 	%r31, [gaussian_blur_param_5];
	cvta.to.global.u64 	%rd1, %rd11;
	cvta.to.global.u64 	%rd2, %rd10;
	mov.u32 	%r32, %ntid.x;
	mov.u32 	%r33, %ctaid.x;
	mov.u32 	%r34, %tid.x;
	mad.lo.s32 	%r1, %r33, %r32, %r34;
	mov.u32 	%r35, %ntid.y;
	mov.u32 	%r36, %ctaid.y;
	mov.u32 	%r37, %tid.y;
	mad.lo.s32 	%r2, %r36, %r35, %r37;
	setp.ge.u32 	%p1, %r1, %r30;
	setp.ge.u32 	%p2, %r2, %r29;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB3_10;

	cvta.to.global.u64 	%rd12, %rd9;
	mad.lo.s32 	%r38, %r2, %r30, %r1;
	cvt.u64.u32 	%rd13, %r38;
	add.s64 	%rd14, %rd2, %rd13;
	ld.global.u8 	%rs1, [%rd14];
	add.s64 	%rd3, %rd12, %rd13;
	st.global.u8 	[%rd3], %rs1;
	shr.u32 	%r39, %r31, 31;
	add.s32 	%r40, %r31, %r39;
	shr.s32 	%r3, %r40, 1;
	neg.s32 	%r74, %r3;
	setp.lt.s32 	%p4, %r3, %r74;
	mov.f32 	%f32, 0f00000000;
	@%p4 bra 	$L__BB3_9;

	add.s32 	%r5, %r29, -1;
	shl.b32 	%r6, %r3, 1;
	mov.u32 	%r41, 1;
	or.b32  	%r42, %r6, 1;
	and.b32  	%r7, %r42, 3;
	mov.u32 	%r43, 3;
	sub.s32 	%r44, %r1, %r3;
	setp.lt.u32 	%p5, %r44, %r30;
	add.s32 	%r8, %r30, -1;
	selp.b32 	%r45, %r44, %r8, %p5;
	max.s32 	%r9, %r45, 0;
	sub.s32 	%r10, %r41, %r3;
	add.s32 	%r46, %r10, %r1;
	setp.lt.u32 	%p6, %r46, %r30;
	selp.b32 	%r47, %r46, %r8, %p6;
	max.s32 	%r11, %r47, 0;
	add.s32 	%r48, %r46, 1;
	setp.lt.u32 	%p7, %r48, %r30;
	selp.b32 	%r49, %r48, %r8, %p7;
	max.s32 	%r12, %r49, 0;
	sub.s32 	%r13, %r43, %r3;
	add.s64 	%rd4, %rd1, 8;
	add.s32 	%r14, %r1, 3;
	mov.f32 	%f32, 0f00000000;
	setp.eq.s32 	%p9, %r7, 1;
	setp.lt.u32 	%p10, %r6, 3;

$L__BB3_3:
	add.s32 	%r50, %r74, %r2;
	setp.lt.u32 	%p8, %r50, %r29;
	selp.b32 	%r51, %r50, %r5, %p8;
	max.s32 	%r52, %r51, 0;
	add.s32 	%r53, %r74, %r3;
	mul.lo.s32 	%r16, %r53, %r31;
	mul.lo.s32 	%r17, %r52, %r30;
	mul.wide.s32 	%rd15, %r16, 4;
	add.s64 	%rd5, %rd1, %rd15;
	add.s32 	%r54, %r9, %r17;
	cvt.u64.u32 	%rd16, %r54;
	add.s64 	%rd17, %rd2, %rd16;
	ld.global.u8 	%rs2, [%rd17];
	cvt.rn.f32.u16 	%f11, %rs2;
	ld.global.f32 	%f12, [%rd5];
	fma.rn.f32 	%f32, %f12, %f11, %f32;
	mov.u32 	%r75, %r10;
	@%p9 bra 	$L__BB3_5;

	add.s32 	%r55, %r11, %r17;
	cvt.u64.u32 	%rd18, %r55;
	add.s64 	%rd19, %rd2, %rd18;
	ld.global.u8 	%rs3, [%rd19];
	cvt.rn.f32.u16 	%f13, %rs3;
	ld.global.f32 	%f14, [%rd5+4];
	fma.rn.f32 	%f15, %f14, %f13, %f32;
	add.s32 	%r56, %r12, %r17;
	cvt.u64.u32 	%rd20, %r56;
	add.s64 	%rd21, %rd2, %rd20;
	ld.global.u8 	%rs4, [%rd21];
	cvt.rn.f32.u16 	%f16, %rs4;
	ld.global.f32 	%f17, [%rd5+8];
	fma.rn.f32 	%f32, %f17, %f16, %f15;
	mov.u32 	%r75, %r13;

$L__BB3_5:
	@%p10 bra 	$L__BB3_8;

	add.s32 	%r78, %r75, -1;
	add.s32 	%r57, %r3, %r75;
	add.s32 	%r58, %r57, %r16;
	mul.wide.s32 	%rd22, %r58, 4;
	add.s64 	%rd31, %rd4, %rd22;
	add.s32 	%r77, %r14, %r75;
	add.s32 	%r76, %r1, %r75;

$L__BB3_7:
	setp.lt.u32 	%p11, %r76, %r30;
	selp.b32 	%r59, %r76, %r8, %p11;
	max.s32 	%r60, %r59, 0;
	add.s32 	%r61, %r60, %r17;
	cvt.u64.u32 	%rd23, %r61;
	add.s64 	%rd24, %rd2, %rd23;
	ld.global.u8 	%rs5, [%rd24];
	cvt.rn.f32.u16 	%f18, %rs5;
	ld.global.f32 	%f19, [%rd31+-8];
	fma.rn.f32 	%f20, %f19, %f18, %f32;
	add.s32 	%r62, %r77, -2;
	setp.lt.u32 	%p12, %r62, %r30;
	selp.b32 	%r63, %r62, %r8, %p12;
	max.s32 	%r64, %r63, 0;
	add.s32 	%r65, %r64, %r17;
	cvt.u64.u32 	%rd25, %r65;
	add.s64 	%rd26, %rd2, %rd25;
	ld.global.u8 	%rs6, [%rd26];
	cvt.rn.f32.u16 	%f21, %rs6;
	ld.global.f32 	%f22, [%rd31+-4];
	fma.rn.f32 	%f23, %f22, %f21, %f20;
	add.s32 	%r66, %r77, -1;
	setp.lt.u32 	%p13, %r66, %r30;
	selp.b32 	%r67, %r66, %r8, %p13;
	max.s32 	%r68, %r67, 0;
	add.s32 	%r69, %r68, %r17;
	cvt.u64.u32 	%rd27, %r69;
	add.s64 	%rd28, %rd2, %rd27;
	ld.global.u8 	%rs7, [%rd28];
	cvt.rn.f32.u16 	%f24, %rs7;
	ld.global.f32 	%f25, [%rd31];
	fma.rn.f32 	%f26, %f25, %f24, %f23;
	setp.lt.u32 	%p14, %r77, %r30;
	selp.b32 	%r70, %r77, %r8, %p14;
	max.s32 	%r71, %r70, 0;
	add.s32 	%r72, %r71, %r17;
	cvt.u64.u32 	%rd29, %r72;
	add.s64 	%rd30, %rd2, %rd29;
	ld.global.u8 	%rs8, [%rd30];
	cvt.rn.f32.u16 	%f27, %rs8;
	ld.global.f32 	%f28, [%rd31+4];
	fma.rn.f32 	%f32, %f28, %f27, %f26;
	add.s64 	%rd31, %rd31, 16;
	add.s32 	%r78, %r78, 4;
	setp.lt.s32 	%p15, %r78, %r3;
	add.s32 	%r26, %r77, 4;
	add.s32 	%r76, %r77, 1;
	mov.u32 	%r77, %r26;
	@%p15 bra 	$L__BB3_7;

$L__BB3_8:
	add.s32 	%r28, %r74, 1;
	setp.lt.s32 	%p16, %r74, %r3;
	mov.u32 	%r74, %r28;
	@%p16 bra 	$L__BB3_3;

$L__BB3_9:
	cvt.rzi.u32.f32 	%r73, %f32;
	st.global.u8 	[%rd3], %r73;

$L__BB3_10:
	ret;

}
	// .globl	separateChannels
.visible .entry separateChannels(
	.param .u64 separateChannels_param_0,
	.param .u32 separateChannels_param_1,
	.param .u32 separateChannels_param_2,
	.param .u64 separateChannels_param_3,
	.param .u64 separateChannels_param_4,
	.param .u64 separateChannels_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [separateChannels_param_0];
	ld.param.u32 	%r4, [separateChannels_param_1];
	ld.param.u32 	%r3, [separateChannels_param_2];
	ld.param.u64 	%rd2, [separateChannels_param_3];
	ld.param.u64 	%rd3, [separateChannels_param_4];
	ld.param.u64 	%rd4, [separateChannels_param_5];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r9, %r8, %r10;
	setp.ge.u32 	%p1, %r1, %r3;
	setp.ge.u32 	%p2, %r2, %r4;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB4_2;

	cvta.to.global.u64 	%rd5, %rd2;
	mad.lo.s32 	%r11, %r2, %r3, %r1;
	cvt.u64.u32 	%rd6, %r11;
	cvta.to.global.u64 	%rd7, %rd1;
	mul.wide.u32 	%rd8, %r11, 3;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.u8 	%rs1, [%rd9];
	ld.global.u8 	%rs2, [%rd9+1];
	ld.global.u8 	%rs3, [%rd9+2];
	add.s64 	%rd10, %rd5, %rd6;
	st.global.u8 	[%rd10], %rs1;
	cvta.to.global.u64 	%rd11, %rd3;
	add.s64 	%rd12, %rd11, %rd6;
	st.global.u8 	[%rd12], %rs2;
	cvta.to.global.u64 	%rd13, %rd4;
	add.s64 	%rd14, %rd13, %rd6;
	st.global.u8 	[%rd14], %rs3;

$L__BB4_2:
	ret;

}
	// .globl	recombineChannels
.visible .entry recombineChannels(
	.param .u64 recombineChannels_param_0,
	.param .u64 recombineChannels_param_1,
	.param .u64 recombineChannels_param_2,
	.param .u64 recombineChannels_param_3,
	.param .u32 recombineChannels_param_4,
	.param .u32 recombineChannels_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [recombineChannels_param_0];
	ld.param.u64 	%rd2, [recombineChannels_param_1];
	ld.param.u64 	%rd3, [recombineChannels_param_2];
	ld.param.u64 	%rd4, [recombineChannels_param_3];
	ld.param.u32 	%r4, [recombineChannels_param_4];
	ld.param.u32 	%r3, [recombineChannels_param_5];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r9, %r8, %r10;
	setp.ge.u32 	%p1, %r1, %r3;
	setp.ge.u32 	%p2, %r2, %r4;
	or.pred  	%p3, %p2, %p1;
	@%p3 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mad.lo.s32 	%r11, %r2, %r3, %r1;
	cvt.u64.u32 	%rd6, %r11;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.u8 	%rs1, [%rd7];
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.u8 	%rs2, [%rd9];
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.u8 	%rs3, [%rd11];
	cvta.to.global.u64 	%rd12, %rd4;
	mul.wide.u32 	%rd13, %r11, 3;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.u8 	[%rd14], %rs1;
	st.global.u8 	[%rd14+1], %rs2;
	st.global.u8 	[%rd14+2], %rs3;

$L__BB5_2:
	ret;

}
	// .globl	global_reduce_kernel
.visible .entry global_reduce_kernel(
	.param .u64 global_reduce_kernel_param_0,
	.param .u64 global_reduce_kernel_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd3, [global_reduce_kernel_param_0];
	ld.param.u64 	%rd4, [global_reduce_kernel_param_1];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r7, %r1, %r2;
	shr.u32 	%r9, %r7, 1;
	setp.eq.s32 	%p1, %r9, 0;
	cvta.to.global.u64 	%rd1, %rd4;
	mul.wide.s32 	%rd5, %r3, 4;
	add.s64 	%rd2, %rd1, %rd5;
	@%p1 bra 	$L__BB6_4;

$L__BB6_1:
	setp.ge.u32 	%p2, %r2, %r9;
	@%p2 bra 	$L__BB6_3;

	add.s32 	%r8, %r9, %r3;
	mul.wide.u32 	%rd6, %r8, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f1, [%rd2];
	ld.global.f32 	%f2, [%rd7];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd2], %f3;

$L__BB6_3:
	bar.sync 	0;
	shr.u32 	%r9, %r9, 1;
	setp.ne.s32 	%p3, %r9, 0;
	@%p3 bra 	$L__BB6_1;

$L__BB6_4:
	setp.ne.s32 	%p4, %r2, 0;
	@%p4 bra 	$L__BB6_6;

	ld.global.f32 	%f4, [%rd2];
	cvta.to.global.u64 	%rd8, %rd3;
	mul.wide.u32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f4;

$L__BB6_6:
	ret;

}
	// .globl	shmem_reduce_kernel
.visible .entry shmem_reduce_kernel(
	.param .u64 shmem_reduce_kernel_param_0,
	.param .u64 shmem_reduce_kernel_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [shmem_reduce_kernel_param_0];
	ld.param.u64 	%rd3, [shmem_reduce_kernel_param_1];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r7, %r6, %r1, %r2;
	cvta.to.global.u64 	%rd4, %rd3;
	mul.wide.s32 	%rd5, %r7, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.wide.s32 	%rd7, %r2, 4;
	cvta.to.global.u64 	%rd1, %rd7;
	st.global.f32 	[%rd1], %f1;
	bar.sync 	0;
	shr.u32 	%r9, %r6, 1;
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB7_4;

$L__BB7_1:
	setp.ge.u32 	%p2, %r2, %r9;
	@%p2 bra 	$L__BB7_3;

	add.s32 	%r8, %r9, %r2;
	mul.wide.u32 	%rd8, %r8, 4;
	cvta.to.global.u64 	%rd9, %rd8;
	ld.global.f32 	%f2, [%rd1];
	ld.global.f32 	%f3, [%rd9];
	add.f32 	%f4, %f3, %f2;
	st.global.f32 	[%rd1], %f4;

$L__BB7_3:
	bar.sync 	0;
	shr.u32 	%r9, %r9, 1;
	setp.ne.s32 	%p3, %r9, 0;
	@%p3 bra 	$L__BB7_1;

$L__BB7_4:
	setp.ne.s32 	%p4, %r2, 0;
	@%p4 bra 	$L__BB7_6;

	mov.u64 	%rd10, 0;
	cvta.to.global.u64 	%rd11, %rd10;
	ld.global.f32 	%f5, [%rd11];
	cvta.to.global.u64 	%rd12, %rd2;
	mul.wide.u32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f32 	[%rd14], %f5;

$L__BB7_6:
	ret;

}

